{"config":{"lang":["da"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduktion","text":"<p>Maya<sup>1</sup> er et open-source v\u00e6rkt\u00f8j til at lave hjemmesider, der kan s\u00f8ge i og vise materialer fra Aarhus Stadsarkivs omfattende samlinger.</p> <p>Tanken bag Maya er, at det skal v\u00e6re nemt for organisationer, virksomheder og lignende, at oprette deres eget online arkiv, hvor kun materialer med relevans for netop deres institution kan blive frems\u00f8gt og vist. Eneste foruds\u00e6tning er, at materialerne er registreret som en del af Aarhus Stadsarkivs samlinger :)</p> <p>Sallingarkivet.dk er f\u00f8rste eksempel p\u00e5 en hjemmeside, der er bygget p\u00e5 Maya, men flere er p\u00e5 vej... </p> <p>Vi har ogs\u00e5 publiceret en demo-side, som viser, hvordan en r\u00e5 Maya-baseret hjemmeside ser ud, f\u00f8r man har konfigureret b\u00e5de det visuelle udtryk, indholdet og funktionaliteten.</p> <p>Maya er udviklet af Aarhus Stadsarkiv, men kildekoden er open source og offentlig tilg\u00e6ngelig p\u00e5 Github, og har man lyst, er man velkommen til at bidrage.</p> <p>Slutteligt en stor tak til Sallingfondene, der har st\u00f8ttet projektet \u00f8konomisk!</p> <ol> <li> <p>Maya er en forkortelse for My Archive, Your Archive. Det var det bedste vi kunne finde p\u00e5, og s\u00e5 var der mulighed for et cool logo!\u00a0\u21a9</p> </li> </ol>"},{"location":"authentication/","title":"Authentication","text":"<p>For at teste, udvikle og efterf\u00f8lgende s\u00e6tte en Maya-baseret web-klient i produktion, skal man bruge en API-n\u00f8gle.</p> <p>API-n\u00f8glen er ikke offentlig, s\u00e5 pas p\u00e5 med at pushe den til Github eller hvilket versionsstyringsprogram man end m\u00e5tte bruge. For at f\u00e5 udleveret en API-n\u00f8gle skal sende en mail til Aarhus Stadsarkiv (stadsarkiv@aarhus.dk) med emnet: \"API-n\u00f8gle til Maya\".</p>"},{"location":"authentication/#env-vs-environment","title":".env vs. ENVIRONMENT","text":"<p>Den nemmeste m\u00e5de at h\u00e5ndtere API-n\u00f8glen p\u00e5, er at gemme den i en <code>.env</code>-fil i roden af projektets BASE_DIR med navnet \"API_KEY\". Eksempelvis:</p> <pre><code>me@LAPTOP:~/min-maya-klient$ cat .env\nAPI_KEY=your_api_key\n</code></pre> <p>Bem\u00e6rk</p> <p>.env-filer er blot simple key-value filer, der bruges til at gemme variabler, ofte af privat karakter: <pre><code>SUPER_SECRET_API_KEY = \"a;ljskdshhhDONTTELLkljasdfhio\"\nDATABASE_URL=secrets://username:password@localhost:11/secrets\nOTHER_SECRET = \"awefWhatevERjlk;a\"\n</code></pre></p> <p>Alternativt kan man benytte API-n\u00f8glen direkte som en milj\u00f8variabel.</p> <p>Links til linux, mac og pc</p>"},{"location":"authentication/#demo-uden-api-ngle","title":"Demo uden API-n\u00f8gle","text":"<p>Hvis man vil se, hvordan en ukonfigureret Maya-klient se ud og fungerer, kan man som n\u00e6vnt kigge p\u00e5 demo-siden: https://demo.openaws.dk</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#v628","title":"v6.2.8","text":""},{"location":"changelog/#changes","title":"Changes","text":"<ul> <li><code>edit original puid</code> and <code>edit master puid</code> can now change the file signature with the <code>--signature</code> option</li> <li><code>edit</code> commands can change multiple properties at the same time</li> <li><code>extract</code> has an improved commit logic </li> </ul> <p>...</p>"},{"location":"changelog/#v624","title":"v6.2.4","text":""},{"location":"changelog/#new-features","title":"New Features","text":"<ul> <li><code>QUERY</code> arguments now support the <code>@not</code> token for negative matches</li> </ul>"},{"location":"changelog/#changes_1","title":"Changes","text":"<ul> <li><code>extract</code> command is faster and keeps its speed regardless of database size</li> </ul>"},{"location":"changelog/#fixes","title":"Fixes","text":"<ul> <li>Fix <code>extract</code> saving files from Web Archives with their query parameters in the file name</li> <li>Fix <code>edit original rename</code> raising exceptions without logging which file caused it</li> <li>Fix <code>identify statutory</code> command missing its help text</li> </ul>"},{"location":"contribution/","title":"Deltagelse","text":"<p>Hvis du vil deltage...</p>"},{"location":"installation/","title":"Installation","text":"<p>Maya er prim\u00e6rt t\u00e6nkt som et kommandline v\u00e6rkt\u00f8j, men hvis man vil, kan man ogs\u00e5 clone github-repo'et, for ydermere at se, hvordan det er bygget og eventuelt bidrage til udviklingen af v\u00e6rkt\u00f8jet.</p> <p>Det er muligt at installere Maya p\u00e5 alle platforme, der har <code>pipx</code> eller <code>uv</code> installeret.</p>"},{"location":"installation/#brug-pipx","title":"Brug pipx","text":"<p><code>pipx</code> er et program til at installere python-baseret software inklusiv alle dets afh\u00e6ngigheder i isolerede milj\u00f8er, hvorved man undg\u00e5r at installere programmer direkte i ens styresystem. Hvis du har <code>pipx</code> p\u00e5 dit system, installerer du <code>maya</code> s\u00e5ledes:</p> <p><code>$ pipx install git+https://github.com/aarhusstadsarkiv/maya.git</code></p>"},{"location":"installation/#brug-uv","title":"Brug uv","text":"<p><code>uv</code> er et package- og projektmanagement program til h\u00e5ndtering af python applikationer, men det indholder ogs\u00e5 et <code>pipx</code>-\u00e6kvivalent v\u00e6rkt\u00f8j, hvormed du kan installere <code>maya</code>:</p> <p><code>$ uv tool install git+https://github.com/aarhusstadsarkiv/maya.git</code></p>"},{"location":"installation/#windows-installation","title":"Windows-installation","text":"<ul> <li>hent latest release</li> <li>gem lokalt</li> <li>powershell (fuld sti eller i PATH-var)</li> </ul>"},{"location":"installation/#test-intallationen","title":"Test intallationen","text":"<p>N\u00e5r du har installeret <code>maya</code> med enten <code>pipx</code>, <code>uv</code> eller som .exe-fil p\u00e5 Windows</p>"},{"location":"usage/hooks/","title":"Hooks","text":"<p>Maya udstiller en r\u00e6kke <code>hooks</code> i sin kildekode, der kan bruges til an \u00e6ndre m\u00e5den Maya eksekverer sin kode p\u00e5.</p> <p>Ved at implementere en eller flere af disse <code>hooks</code> kan man med andre ord skrive en slags letv\u00e6gtsplugin. Man skal blot bruge <code>@hookimpl</code> decoratoren p\u00e5 en funktion, der er navngivet efter en af Mayas hooks, og som accepterer en eller flere af de dokumenterede parametre, der bliver sendt til det hook.</p> <p>Alle hook-implementeringer, der er implementeret i et python-modul (<code>.py</code>-fil) i roden af \"hooks\"-mappen i projektets BASE_DIR, bliver automatisk integereret i Mayas kodeeksekvering. Hvis samme hook er implementeret i flere python-moduler, eksekveres de i alfabetisk r\u00e6kkef\u00f8lge.</p>"},{"location":"usage/hooks/#eksempel","title":"Eksempel","text":"<p>For example, you can implement the render_cell plugin hook like this even though the full documented hook signature is render_cell(row, value, column, table, database, datasette):</p>"},{"location":"usage/hooks/#liste-af-hooks","title":"Liste af hooks","text":""},{"location":"usage/hooks/#_1","title":"Hooks","text":""},{"location":"usage/settings/","title":"Settings","text":"<p>Maya indeholder en lang r\u00e6kke settings, som man kan overskrive efter behov.</p> <p>En setting findes i enten <code>settings.yml</code>, <code>facets.yml</code> eller <code>language.yml</code> (oplistet nedenfor), og hvis man vil overskrive en setting, skal man oprette en tilsvarende <code>yaml</code>-fil i roden af BASE_DIR. Hvis man eksempelvis vil \u00e6ndre om Maya gemmer p\u00e5 seneste s\u00f8gning mens man navigerer rundt p\u00e5 andre sider, s\u00e6tter man v\u00e6rdien til false:</p> <pre><code># settings.yml\nsearch_keep_results: false\n</code></pre>"},{"location":"usage/settings/#settingsyml","title":"settings.yml","text":""},{"location":"usage/settings/#_1","title":"Settings","text":""},{"location":"usage/settings/#facetsyml","title":"facets.yml","text":""},{"location":"usage/settings/#languageyml","title":"language.yml","text":""}]}